pipeline {
  agent any
  parameters {
    string(name: 'build_version', defaultValue: 'V1.0', description: 'Build version to use for Docker image')
  }
  stages {
    stage('Checkout') {
      steps {
        git credentialsId: 'github', branch: 'main', url: 'https://github.com/syvir/devops-demo-project.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd demo-java-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://sonarqube:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd demo-java-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "syvir/demo-java-app:${build_version}"
        REGISTRY_CREDENTIALS = credentials('dockerhub')
      }
      steps {
        script {
            sh 'cd demo-java-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "devops-demo-project"
            GIT_USER_NAME = "syvir"
        }
        steps {
            withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                sh '''
                    echo "Configuration Git..."
                    git config user.email "sarahtoumert@hotmail.fr"
                    git config user.name "syvir"

                    echo "Modification du fichier values.yaml..."
                    sed -i "s/tag: .*/tag: \"${build_version}\"/" helm/app/values.yaml

                    echo "VÃ©rification des modifications..."
                    git status
                    git diff helm/app/values.yaml

                    echo "Git add et commit..."
                    git add helm/app/values.yaml
                    git commit -m "Update deployment image to version ${build_version}"

                    echo "Git push avec authentification..."
                    git push https://github.com/$%7BGIT_USER_NAME%7D/$%7BGIT_REPO_NAME%7D.git HEAD:main
                '''
            }
        }
    }
  }
}
